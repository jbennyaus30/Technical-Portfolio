/*---- ICT702 - GROUP 2 - ASSESSMENT 5 ----*/

/*---- a – Create a database and name it as ICT702_GroupNo ----*/
CREATE DATABASE ICT702_Group2;

/*---- b – Use the created database and create all the above tables, make sure to include all the constraints, such as primary key, foreign key, Null, Not Null, and appropriate data type, and provide a screenshot after the creation of each table. ----*/

CREATE TABLE JOB
 (
     Job_Code INT NOT NULL PRIMARY KEY,
     Description VARCHAR(20) NOT NULL,
     Hour NUMERIC(5,2) NOT NULL,
     Job_Update DATE NOT NULL
     );

CREATE TABLE EMPLOYEE
(
    Emp_Num INT NOT NULL PRIMARY KEY,
    LName VARCHAR(20) NOT NULL,
    FName VARCHAR(20) NOT NULL,
    HireDate DATE NOT NULL,
    Job_Code INT NOT NULL,
    Emp_Years INT NOT NULL,
    FOREIGN KEY(Job_Code) REFERENCES JOB(Job_Code)
    );

CREATE TABLE PROJECT
(
    Proj_Num INT NOT NULL PRIMARY KEY,
    Proj_Name VARCHAR(20) NOT NULL,
    Value NUMERIC(15,2) NOT NULL,
    Balance NUMERIC(15,2) NOT NULL,
    Emp_Num INT,
    FOREIGN KEY(Emp_Num) REFERENCES EMPLOYEE(Emp_Num)
    );

CREATE TABLE ASSIGNMENT
(
    Assi_Num INT NOT NULL PRIMARY KEY,
    Date DATE NOT NULL,
    Proj_Num INT NOT NULL,
    Emp_Num INT,
    Hours NUMERIC(5,2) NOT NULL,
    Charge NUMERIC(5,2) NOT NULL,
    FOREIGN KEY(Proj_Num) REFERENCES PROJECT(Proj_Num),
    FOREIGN KEY(Emp_Num) REFERENCES EMPLOYEE(Emp_Num)
    );

/*---- c – Insert the data as provided in the above tables and provide a screenshot after inserting the data for each table. ----*/

INSERT into JOB VALUES
(500, 'Programmer', 35.75, '2017-11-20'),
(501, 'System Analyst', 96.75, '2017-11-20'),
(502, 'Database Designer', 120.00, '2018-11-22'),
(503, 'Electronic Engineer', 84.5, '2017-11-21'),
(504, 'Mechanical Engineer', 67.9, '2017-11-21'),
(505, 'Civil Engineer', 56.80, '2017-11-20'),
(506, 'Application Designer', 51.25, '2018-11-24');

SELECT * FROM JOB

INSERT into EMPLOYEE VALUES
(101, 'Beatriz', 'Alvarado', '2023-03-08', 502, 2),
(102, 'Susmita', 'Giri', '2022-11-05', 501, 3),
(103, 'Kevin', 'Sibi', '2022-12-13', 500, 3),
(104, 'Javed', 'Parivash', '2023-01-01', 501, 5),
(105, 'Euibin', 'Kim', '2019-11-10', 502, 5),
(106, 'LO', 'Anjoj', '2020-01-29', 505, 4),
(107, 'Macario', 'Maria', '2021-01-25', 506, 1),
(108, 'Mahrajan', 'Rajan', '2022-11-20', 501, 2),
(109, 'Johns', 'Alex', '2000-11-08', 504, 12),
(110, 'Johnson', 'Julia', '2005-10-09', 501, 17),
(111, 'Ananta', 'Neupane', '2000-01-01', 503, 3);

SELECT * FROM EMPLOYEE;

INSERT into PROJECT VALUES
(15, 'Evergreen', 143500.00, 1003550.00, 103),
(18, 'Amber wave', 3500500.00, 2110346.00, 108),
(22, 'Rolling Tide', 805000.00, 500345.20, 102),
(25, 'Solar Installation', 2555000.00, 23809850.00, 107);
 
SELECT * FROM PROJECT;
 
INSERT into ASSIGNMENT VALUES
(1001, '2018-03-22', 18, 109, 3.5, 295.75),
(1002, '2019-03-22', 22, 110, 4.2, 145.11),
(1003, '2019-04-22', 18, 110, 2.0, 69.10),
(1004, '2022-10-10', 25, 107, 5.9, 75.5),
(1005, '2022-12-11', 22, 104, 6.5, 65.5),
(1006, '2023-04-01', 15, 101, 10, 80.0),
(1007, '2023-03-05', 25, 102, 9, 60.0),
(1008, '2023-01-01', 18, 101, 14, 66.5),
(1009, '2022-05-10', 15, 104, 8.5, 55.25),
(1010, '2023-05-01', 15, 107, 12, 415.25);
 
SELECT * FROM ASSIGNMENT;

/*---- d – Write SQL code that will create only the table structure for a table named EMPLOYEE1. This table will be a subset of the EMPLOYEE table. The basic EMPLOYEE1 table structure is summarized in the following table. Use EMP_NUM as the primary key. Note that the JOB_CODE is the FK to JOB so be certain to enforce referential integrity. Your code should also prevent null entries in EMP_LNAME and EMP_FNAME. ----*/

CREATE TABLE EMPLOYEE1
(
    Emp_Num INT NOT NULL PRIMARY KEY,
    Lname VARCHAR(15) NOT NULL,
    FName VARCHAR(15) NOT NULL,
    HireDate DATE NOT NULL,
    Job_Code INT NOT NULL,
    FOREIGN KEY(Emp_Num) REFERENCES EMPLOYEE(Emp_Num),
    FOREIGN KEY(Job_Code) REFERENCES JOB(Job_Code)
    );


/*---- e – Write the SQL code to enter the first two rows for the table shown below. Each row should be inserted individually, without using a subquery. Insert the rows in the order that they are listed in the figure below. ----*/

INSERT into EMPLOYEE1 VALUES
(101, 'Fenny', 'Fenny', '2023-03-08', 502);
 

INSERT into EMPLOYEE1 VALUES
(102, 'Bista', 'Samjhana', '2022-11-05', 501);
 

SELECT * FROM EMPLOYEE1;


/*---- f – Using the EMPLOYEE table that already exist, use a subquery to insert the remaining rows from the EMPLOYEE table into the EMPLOYEE1 table. Remember, your sub-query should only retrieve the column needed for the EMPLOYEE1 table and only the employees shown in the figure. ----*/

INSERT INTO EMPLOYEE1(Emp_Num, LName, FName, HireDate, Job_Code)
SELECT Emp_Num, LName, FName, HireDate, Job_Code
FROM EMPLOYEE
WHERE Emp_Num NOT IN
(SELECT Emp_Num
 FROM EMPLOYEE1);

SELECT * FROM EMPLOYEE1;


/*---- g – write the SQL cod that will save the changes made to EMPLOYEE1 table. ----*/

COMMIT;

/*---- h – write the SQL code to change job code to 501 for the person whose employee number (Emp_Num) is 107. ----*/

UPDATE EMPLOYEE1
SET Job_Code = 501
WHERE Emp_Num = 107;
	
 
SELECT * FROM EMPLOYEE1;

/*---- i – Write the SQL code to delete the row for Johns Alex, who was hired on November 08, 2000, and whose job code is 504. (Hint: Use logical operators to include all the information given in this problem. Remember, if you are using MySQL, you will have to first disable “safe mode.”) ----*/

DELETE FROM EMPLOYEE1
WHERE LName = 'Johns'
AND FName = 'Alex'
AND HireDate = '2000-11-08'
AND Job_Code = 504;

SELECT * FROM EMPLOYEE1;

/*---- j – write the SQL code to create a copy of EMPLOYEE1, including all its data, and naming the new table as EMPLOYEE2.----*/

CREATE TABLE EMPLOYEE2
AS SELECT *
FROM EMPLOYEE1;
 

SELECT * FROM EMPLOYEE2;


/*---- k – Using the EMPLOYEE2 table, write the SQL code that will add the attribute PCT and ProjNum to EMPLOYEE2. The PCT is the bonus percentage to be paid to each employee. The new attribute characteristics are:
PCT Numeric 
(4,2) ProjNum Int
 ----*/

ALTER TABLE EMPLOYEE2
ADD PCT NUMERIC(4,2),
ADD ProjNum INT;

SELECT * FROM EMPLOYEE2;

/*---- l – Using the EMPLOYEE2 table, write the SQL code to change the PCT value to 3.85 for the person whose employee number is 103. ----*/

UPDATE EMPLOYEE2
SET PCT = 3.85
WHERE Emp_Num = 103;

 
SELECT * FROM EMPLOYEE2;


/*---- m – Using the EMPLOYEE2 table, write the SQL code to change the PCT value to 5.00 for the employees whose employee numbers is 101,105, and 107. ----*/

UPDATE EMPLOYEE2
SET PCT = 5.00
WHERE Emp_Num IN (101, 105, 107);

 

SELECT * FROM EMPLOYEE2;


/*---- n – Using the EMPLOYEE2 table, write a single command to change the PCT value to 10 for all employee who do not currently have a value for PCT. ----*/

UPDATE EMPLOYEE2 
SET PCT = 10
WHERE PCT IS NULL;

 
	
SELECT * FROM EMPLOYEE2;


/*---- o – Using the EMPLOYEE2 table, write a single command to add 0.5 to the PCT value of the employee’s name is Fenny Fenny. (Use logical operator and Lame and FName). ----*/

UPDATE EMPLOYEE2
SET PCT = PCT + 0.5
WHERE LName = 'Fenny'
AND FName = 'Fenny';

 
SELECT * FROM EMPLOYEE2;


/*---- p – Write SQL code to display the employee number, first name and last name and project number and project name for the employees who working on project.
(Use EMPLOYEE and Project tables). ----*/

SELECT  e.Emp_Num, e.LName, e.FName, p.Proj_Num, p.Proj_Name
FROM EMPLOYEE e
INNER JOIN PROJECT p ON e.Emp_Num = p.Emp_Num
WHERE p.Proj_Num IS NOT NULL;


/*---- q – Write SQL code to display the employee number, first name and last name and project number and project name for the employees who not working on any project. (Use sub-query) (Use EMPLOYEE and Project tables). ----*/

SELECT e.Emp_Num, e.LName, e.FName, NULL AS Proj_Num, NULL AS Proj_Name 
FROM EMPLOYEE e 
WHERE e.Emp_Num NOT IN ( 
SELECT Emp_Num 
FROM PROJECT );


/*---- r – Write SQL code to find the total balance and name the field as Total Balance.----*/

SELECT SUM(Balance) AS 'TOTAL BALANCE'
FROM PROJECT;


/*---- s – Write SQL code to display the employees First name, last name who have the same job-code, and order the result by first name in ascending order. ----*/

SELECT FName, LName
FROM EMPLOYEE
WHERE Job_Code IN 
(
    SELECT Job_Code
    FROM EMPLOYEE
    GROUP BY Job_Code
    HAVING COUNT(*) > 1
)
ORDER BY FName ASC;



